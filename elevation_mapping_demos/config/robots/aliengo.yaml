# The id of the tf frame of the elevation map.
map_frame_id: "odom"

# The id of the robot base tf frame.
robot_base_frame_id: "base_footprint"

# The elevation map is moved along with the robot following a track point.
track_point_x: 0.0
track_point_y: 0.0
track_point_z: 0.0
track_point_frame_id: "base_footprint"

# The name of the robot pose and covariance topic.
#robot_pose_cache_size: 200
robot_pose_with_covariance_topic: "/base_to_footprint_pose"

# The minimum update rate (in Hz) at which the elevation map is
# updated either from new measurements or the robot pose estimates.
#min_update_rate: 20.0

# The size (in m) of the elevation map.
length_in_x: 10
length_in_y: 2

# The resolution (cell size in m/cell) of the elevation map.
resolution: 0.04

# The minimum and maximum values for the elevation map variance data.
max_variance: 0.0009
min_variance: 0.000009

# Each cell in the elevation map has an uncertainty for its height value.
# Depending on the Mahalonobis distance of the existing height distribution
# and the new measurements, the incoming data is fused with the existing estimate,
# overwritten, or ignored. This parameter determines the threshold on the Mahalanobis
# distance which determines how the incoming measurements are processed.
mahalanobis_distance_threshold: 2.5

# Noise added to measurements that are higher than the current elevation map at that particular position.
# This noise-adding process is only performed if a point falls over the Mahalanobis distance threshold.
# A higher value is useful to adapt faster to dynamic environments (e.g., moving objects), but might cause
# more noise in the height estimation.
multi_height_noise: 0.000009

# The rate for publishing the entire (fused) elevation map.
#fused_map_publishing_rate: 20.0

# Enable/disable a separate thread that removes elements from
# the map which are not visible anymore, by means of ray-tracing,
# originating from the sensor frame.
enable_visibility_cleanup: false

# Enable/disable a continuous clean-up of the elevation map. If enabled, on arrival of each new sensor data
# the elevation map will be cleared and filled up only with the latest data from the sensor. When continuous
# clean-up is enabled, visibility clean-up will automatically be disabled since it is not needed in this case.
enable_continuous_cleanup: false

# The rate (in Hz) at which the visibility clean-up is performed.
visibility_cleanup_rate: 0.0

# The sensor's scanning duration (in s) which is used for the visibility cleanup.
# Set this roughly to the duration it takes between two consecutive full scans
# (e.g. 0.033 for a ToF camera with 30 Hz, or 3 s for a rotating laser scanner).
# Depending on how dense or sparse your scans are, increase or reduce the scanning duration.
# Smaller values lead to faster dynamic object removal and bigger values help to reduce faulty map cleanups.
#scanning_duration: 1.0

# The number of threads to use for processing callbacks.
# More threads results in higher throughput, at cost of more resource usage.
num_callback_threads: 1